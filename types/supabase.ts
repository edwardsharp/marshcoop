/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/members": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.members.id"];
          UserId?: parameters["rowFilter.members.UserId"];
          registration_email?: parameters["rowFilter.members.registration_email"];
          name?: parameters["rowFilter.members.name"];
          phone?: parameters["rowFilter.members.phone"];
          address?: parameters["rowFilter.members.address"];
          discount?: parameters["rowFilter.members.discount"];
          discount_type?: parameters["rowFilter.members.discount_type"];
          fees_paid?: parameters["rowFilter.members.fees_paid"];
          store_credit?: parameters["rowFilter.members.store_credit"];
          shares?: parameters["rowFilter.members.shares"];
          member_type?: parameters["rowFilter.members.member_type"];
          data?: parameters["rowFilter.members.data"];
          createdAt?: parameters["rowFilter.members.createdAt"];
          updatedAt?: parameters["rowFilter.members.updatedAt"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["members"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** members */
          members?: definitions["members"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.members.id"];
          UserId?: parameters["rowFilter.members.UserId"];
          registration_email?: parameters["rowFilter.members.registration_email"];
          name?: parameters["rowFilter.members.name"];
          phone?: parameters["rowFilter.members.phone"];
          address?: parameters["rowFilter.members.address"];
          discount?: parameters["rowFilter.members.discount"];
          discount_type?: parameters["rowFilter.members.discount_type"];
          fees_paid?: parameters["rowFilter.members.fees_paid"];
          store_credit?: parameters["rowFilter.members.store_credit"];
          shares?: parameters["rowFilter.members.shares"];
          member_type?: parameters["rowFilter.members.member_type"];
          data?: parameters["rowFilter.members.data"];
          createdAt?: parameters["rowFilter.members.createdAt"];
          updatedAt?: parameters["rowFilter.members.updatedAt"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.members.id"];
          UserId?: parameters["rowFilter.members.UserId"];
          registration_email?: parameters["rowFilter.members.registration_email"];
          name?: parameters["rowFilter.members.name"];
          phone?: parameters["rowFilter.members.phone"];
          address?: parameters["rowFilter.members.address"];
          discount?: parameters["rowFilter.members.discount"];
          discount_type?: parameters["rowFilter.members.discount_type"];
          fees_paid?: parameters["rowFilter.members.fees_paid"];
          store_credit?: parameters["rowFilter.members.store_credit"];
          shares?: parameters["rowFilter.members.shares"];
          member_type?: parameters["rowFilter.members.member_type"];
          data?: parameters["rowFilter.members.data"];
          createdAt?: parameters["rowFilter.members.createdAt"];
          updatedAt?: parameters["rowFilter.members.updatedAt"];
        };
        body: {
          /** members */
          members?: definitions["members"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/orderlineitems": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.orderlineitems.id"];
          OrderId?: parameters["rowFilter.orderlineitems.OrderId"];
          WholesaleOrderId?: parameters["rowFilter.orderlineitems.WholesaleOrderId"];
          price?: parameters["rowFilter.orderlineitems.price"];
          quantity?: parameters["rowFilter.orderlineitems.quantity"];
          total?: parameters["rowFilter.orderlineitems.total"];
          kind?: parameters["rowFilter.orderlineitems.kind"];
          description?: parameters["rowFilter.orderlineitems.description"];
          vendor?: parameters["rowFilter.orderlineitems.vendor"];
          selected_unit?: parameters["rowFilter.orderlineitems.selected_unit"];
          data?: parameters["rowFilter.orderlineitems.data"];
          createdAt?: parameters["rowFilter.orderlineitems.createdAt"];
          updatedAt?: parameters["rowFilter.orderlineitems.updatedAt"];
          status?: parameters["rowFilter.orderlineitems.status"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["orderlineitems"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** orderlineitems */
          orderlineitems?: definitions["orderlineitems"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.orderlineitems.id"];
          OrderId?: parameters["rowFilter.orderlineitems.OrderId"];
          WholesaleOrderId?: parameters["rowFilter.orderlineitems.WholesaleOrderId"];
          price?: parameters["rowFilter.orderlineitems.price"];
          quantity?: parameters["rowFilter.orderlineitems.quantity"];
          total?: parameters["rowFilter.orderlineitems.total"];
          kind?: parameters["rowFilter.orderlineitems.kind"];
          description?: parameters["rowFilter.orderlineitems.description"];
          vendor?: parameters["rowFilter.orderlineitems.vendor"];
          selected_unit?: parameters["rowFilter.orderlineitems.selected_unit"];
          data?: parameters["rowFilter.orderlineitems.data"];
          createdAt?: parameters["rowFilter.orderlineitems.createdAt"];
          updatedAt?: parameters["rowFilter.orderlineitems.updatedAt"];
          status?: parameters["rowFilter.orderlineitems.status"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.orderlineitems.id"];
          OrderId?: parameters["rowFilter.orderlineitems.OrderId"];
          WholesaleOrderId?: parameters["rowFilter.orderlineitems.WholesaleOrderId"];
          price?: parameters["rowFilter.orderlineitems.price"];
          quantity?: parameters["rowFilter.orderlineitems.quantity"];
          total?: parameters["rowFilter.orderlineitems.total"];
          kind?: parameters["rowFilter.orderlineitems.kind"];
          description?: parameters["rowFilter.orderlineitems.description"];
          vendor?: parameters["rowFilter.orderlineitems.vendor"];
          selected_unit?: parameters["rowFilter.orderlineitems.selected_unit"];
          data?: parameters["rowFilter.orderlineitems.data"];
          createdAt?: parameters["rowFilter.orderlineitems.createdAt"];
          updatedAt?: parameters["rowFilter.orderlineitems.updatedAt"];
          status?: parameters["rowFilter.orderlineitems.status"];
        };
        body: {
          /** orderlineitems */
          orderlineitems?: definitions["orderlineitems"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/orders": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.orders.id"];
          UserId?: parameters["rowFilter.orders.UserId"];
          status?: parameters["rowFilter.orders.status"];
          payment_status?: parameters["rowFilter.orders.payment_status"];
          shipment_status?: parameters["rowFilter.orders.shipment_status"];
          total?: parameters["rowFilter.orders.total"];
          subtotal?: parameters["rowFilter.orders.subtotal"];
          name?: parameters["rowFilter.orders.name"];
          email?: parameters["rowFilter.orders.email"];
          phone?: parameters["rowFilter.orders.phone"];
          address?: parameters["rowFilter.orders.address"];
          notes?: parameters["rowFilter.orders.notes"];
          email_sent?: parameters["rowFilter.orders.email_sent"];
          item_count?: parameters["rowFilter.orders.item_count"];
          history?: parameters["rowFilter.orders.history"];
          createdAt?: parameters["rowFilter.orders.createdAt"];
          updatedAt?: parameters["rowFilter.orders.updatedAt"];
          MemberId?: parameters["rowFilter.orders.MemberId"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["orders"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** orders */
          orders?: definitions["orders"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.orders.id"];
          UserId?: parameters["rowFilter.orders.UserId"];
          status?: parameters["rowFilter.orders.status"];
          payment_status?: parameters["rowFilter.orders.payment_status"];
          shipment_status?: parameters["rowFilter.orders.shipment_status"];
          total?: parameters["rowFilter.orders.total"];
          subtotal?: parameters["rowFilter.orders.subtotal"];
          name?: parameters["rowFilter.orders.name"];
          email?: parameters["rowFilter.orders.email"];
          phone?: parameters["rowFilter.orders.phone"];
          address?: parameters["rowFilter.orders.address"];
          notes?: parameters["rowFilter.orders.notes"];
          email_sent?: parameters["rowFilter.orders.email_sent"];
          item_count?: parameters["rowFilter.orders.item_count"];
          history?: parameters["rowFilter.orders.history"];
          createdAt?: parameters["rowFilter.orders.createdAt"];
          updatedAt?: parameters["rowFilter.orders.updatedAt"];
          MemberId?: parameters["rowFilter.orders.MemberId"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.orders.id"];
          UserId?: parameters["rowFilter.orders.UserId"];
          status?: parameters["rowFilter.orders.status"];
          payment_status?: parameters["rowFilter.orders.payment_status"];
          shipment_status?: parameters["rowFilter.orders.shipment_status"];
          total?: parameters["rowFilter.orders.total"];
          subtotal?: parameters["rowFilter.orders.subtotal"];
          name?: parameters["rowFilter.orders.name"];
          email?: parameters["rowFilter.orders.email"];
          phone?: parameters["rowFilter.orders.phone"];
          address?: parameters["rowFilter.orders.address"];
          notes?: parameters["rowFilter.orders.notes"];
          email_sent?: parameters["rowFilter.orders.email_sent"];
          item_count?: parameters["rowFilter.orders.item_count"];
          history?: parameters["rowFilter.orders.history"];
          createdAt?: parameters["rowFilter.orders.createdAt"];
          updatedAt?: parameters["rowFilter.orders.updatedAt"];
          MemberId?: parameters["rowFilter.orders.MemberId"];
        };
        body: {
          /** orders */
          orders?: definitions["orders"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/products": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.products.id"];
          unf?: parameters["rowFilter.products.unf"];
          upc_code?: parameters["rowFilter.products.upc_code"];
          category?: parameters["rowFilter.products.category"];
          sub_category?: parameters["rowFilter.products.sub_category"];
          name?: parameters["rowFilter.products.name"];
          description?: parameters["rowFilter.products.description"];
          pk?: parameters["rowFilter.products.pk"];
          size?: parameters["rowFilter.products.size"];
          unit_type?: parameters["rowFilter.products.unit_type"];
          ws_price?: parameters["rowFilter.products.ws_price"];
          u_price?: parameters["rowFilter.products.u_price"];
          ws_price_cost?: parameters["rowFilter.products.ws_price_cost"];
          u_price_cost?: parameters["rowFilter.products.u_price_cost"];
          codes?: parameters["rowFilter.products.codes"];
          vendor?: parameters["rowFilter.products.vendor"];
          import_tag?: parameters["rowFilter.products.import_tag"];
          createdAt?: parameters["rowFilter.products.createdAt"];
          updatedAt?: parameters["rowFilter.products.updatedAt"];
          count_on_hand?: parameters["rowFilter.products.count_on_hand"];
          no_backorder?: parameters["rowFilter.products.no_backorder"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["products"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** products */
          products?: definitions["products"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.products.id"];
          unf?: parameters["rowFilter.products.unf"];
          upc_code?: parameters["rowFilter.products.upc_code"];
          category?: parameters["rowFilter.products.category"];
          sub_category?: parameters["rowFilter.products.sub_category"];
          name?: parameters["rowFilter.products.name"];
          description?: parameters["rowFilter.products.description"];
          pk?: parameters["rowFilter.products.pk"];
          size?: parameters["rowFilter.products.size"];
          unit_type?: parameters["rowFilter.products.unit_type"];
          ws_price?: parameters["rowFilter.products.ws_price"];
          u_price?: parameters["rowFilter.products.u_price"];
          ws_price_cost?: parameters["rowFilter.products.ws_price_cost"];
          u_price_cost?: parameters["rowFilter.products.u_price_cost"];
          codes?: parameters["rowFilter.products.codes"];
          vendor?: parameters["rowFilter.products.vendor"];
          import_tag?: parameters["rowFilter.products.import_tag"];
          createdAt?: parameters["rowFilter.products.createdAt"];
          updatedAt?: parameters["rowFilter.products.updatedAt"];
          count_on_hand?: parameters["rowFilter.products.count_on_hand"];
          no_backorder?: parameters["rowFilter.products.no_backorder"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.products.id"];
          unf?: parameters["rowFilter.products.unf"];
          upc_code?: parameters["rowFilter.products.upc_code"];
          category?: parameters["rowFilter.products.category"];
          sub_category?: parameters["rowFilter.products.sub_category"];
          name?: parameters["rowFilter.products.name"];
          description?: parameters["rowFilter.products.description"];
          pk?: parameters["rowFilter.products.pk"];
          size?: parameters["rowFilter.products.size"];
          unit_type?: parameters["rowFilter.products.unit_type"];
          ws_price?: parameters["rowFilter.products.ws_price"];
          u_price?: parameters["rowFilter.products.u_price"];
          ws_price_cost?: parameters["rowFilter.products.ws_price_cost"];
          u_price_cost?: parameters["rowFilter.products.u_price_cost"];
          codes?: parameters["rowFilter.products.codes"];
          vendor?: parameters["rowFilter.products.vendor"];
          import_tag?: parameters["rowFilter.products.import_tag"];
          createdAt?: parameters["rowFilter.products.createdAt"];
          updatedAt?: parameters["rowFilter.products.updatedAt"];
          count_on_hand?: parameters["rowFilter.products.count_on_hand"];
          no_backorder?: parameters["rowFilter.products.no_backorder"];
        };
        body: {
          /** products */
          products?: definitions["products"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/wholesaleorders": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.wholesaleorders.id"];
          vendor?: parameters["rowFilter.wholesaleorders.vendor"];
          notes?: parameters["rowFilter.wholesaleorders.notes"];
          status?: parameters["rowFilter.wholesaleorders.status"];
          payment_status?: parameters["rowFilter.wholesaleorders.payment_status"];
          shipment_status?: parameters["rowFilter.wholesaleorders.shipment_status"];
          createdAt?: parameters["rowFilter.wholesaleorders.createdAt"];
          updatedAt?: parameters["rowFilter.wholesaleorders.updatedAt"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["wholesaleorders"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** wholesaleorders */
          wholesaleorders?: definitions["wholesaleorders"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.wholesaleorders.id"];
          vendor?: parameters["rowFilter.wholesaleorders.vendor"];
          notes?: parameters["rowFilter.wholesaleorders.notes"];
          status?: parameters["rowFilter.wholesaleorders.status"];
          payment_status?: parameters["rowFilter.wholesaleorders.payment_status"];
          shipment_status?: parameters["rowFilter.wholesaleorders.shipment_status"];
          createdAt?: parameters["rowFilter.wholesaleorders.createdAt"];
          updatedAt?: parameters["rowFilter.wholesaleorders.updatedAt"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.wholesaleorders.id"];
          vendor?: parameters["rowFilter.wholesaleorders.vendor"];
          notes?: parameters["rowFilter.wholesaleorders.notes"];
          status?: parameters["rowFilter.wholesaleorders.status"];
          payment_status?: parameters["rowFilter.wholesaleorders.payment_status"];
          shipment_status?: parameters["rowFilter.wholesaleorders.shipment_status"];
          createdAt?: parameters["rowFilter.wholesaleorders.createdAt"];
          updatedAt?: parameters["rowFilter.wholesaleorders.updatedAt"];
        };
        body: {
          /** wholesaleorders */
          wholesaleorders?: definitions["wholesaleorders"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
}

export interface definitions {
  members: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    UserId?: string;
    registration_email?: string;
    name?: string;
    phone?: string;
    address?: string;
    discount?: number;
    discount_type?: string;
    fees_paid?: number;
    store_credit?: number;
    shares?: number;
    member_type?: string;
    data?: string;
    createdAt?: string;
    updatedAt?: string;
  };
  orderlineitems: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Note:
     * This is a Foreign Key to `orders.id`.<fk table='orders' column='id'/>
     */
    OrderId?: number;
    /**
     * Note:
     * This is a Foreign Key to `wholesaleorders.id`.<fk table='wholesaleorders' column='id'/>
     */
    WholesaleOrderId?: number;
    price?: number;
    quantity?: number;
    total?: number;
    kind?: string;
    description?: string;
    vendor?: string;
    selected_unit?: string;
    data?: string;
    createdAt?: string;
    updatedAt?: string;
    status?: string;
  };
  orders: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    UserId?: string;
    status?: string;
    payment_status?: string;
    shipment_status?: string;
    total?: number;
    subtotal?: number;
    name?: string;
    email?: string;
    phone?: string;
    address?: string;
    notes?: string;
    email_sent?: boolean;
    item_count?: number;
    history?: string;
    createdAt?: string;
    updatedAt?: string;
    /**
     * Note:
     * This is a Foreign Key to `members.id`.<fk table='members' column='id'/>
     */
    MemberId?: number;
  };
  products: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    unf?: string;
    upc_code?: string;
    category?: string;
    sub_category?: string;
    name?: string;
    description?: string;
    pk?: number;
    size?: string;
    unit_type?: string;
    ws_price?: number;
    u_price?: number;
    ws_price_cost?: number;
    u_price_cost?: number;
    codes?: string;
    vendor?: string;
    import_tag?: string;
    createdAt?: string;
    updatedAt?: string;
    count_on_hand?: number;
    no_backorder?: boolean;
  };
  wholesaleorders: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    vendor?: string;
    notes?: string;
    status?: string;
    payment_status?: string;
    shipment_status?: string;
    createdAt?: string;
    updatedAt?: string;
  };
}

export interface parameters {
  /** Preference */
  preferParams: "params=single-object";
  /** Preference */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /** Preference */
  preferCount: "count=none";
  /** Filtering Columns */
  select: string;
  /** On Conflict */
  on_conflict: string;
  /** Ordering */
  order: string;
  /** Limiting and Pagination */
  range: string;
  /** Limiting and Pagination */
  rangeUnit: string;
  /** Limiting and Pagination */
  offset: string;
  /** Limiting and Pagination */
  limit: string;
  /** members */
  "body.members": definitions["members"];
  "rowFilter.members.id": string;
  "rowFilter.members.UserId": string;
  "rowFilter.members.registration_email": string;
  "rowFilter.members.name": string;
  "rowFilter.members.phone": string;
  "rowFilter.members.address": string;
  "rowFilter.members.discount": string;
  "rowFilter.members.discount_type": string;
  "rowFilter.members.fees_paid": string;
  "rowFilter.members.store_credit": string;
  "rowFilter.members.shares": string;
  "rowFilter.members.member_type": string;
  "rowFilter.members.data": string;
  "rowFilter.members.createdAt": string;
  "rowFilter.members.updatedAt": string;
  /** orderlineitems */
  "body.orderlineitems": definitions["orderlineitems"];
  "rowFilter.orderlineitems.id": string;
  "rowFilter.orderlineitems.OrderId": string;
  "rowFilter.orderlineitems.WholesaleOrderId": string;
  "rowFilter.orderlineitems.price": string;
  "rowFilter.orderlineitems.quantity": string;
  "rowFilter.orderlineitems.total": string;
  "rowFilter.orderlineitems.kind": string;
  "rowFilter.orderlineitems.description": string;
  "rowFilter.orderlineitems.vendor": string;
  "rowFilter.orderlineitems.selected_unit": string;
  "rowFilter.orderlineitems.data": string;
  "rowFilter.orderlineitems.createdAt": string;
  "rowFilter.orderlineitems.updatedAt": string;
  "rowFilter.orderlineitems.status": string;
  /** orders */
  "body.orders": definitions["orders"];
  "rowFilter.orders.id": string;
  "rowFilter.orders.UserId": string;
  "rowFilter.orders.status": string;
  "rowFilter.orders.payment_status": string;
  "rowFilter.orders.shipment_status": string;
  "rowFilter.orders.total": string;
  "rowFilter.orders.subtotal": string;
  "rowFilter.orders.name": string;
  "rowFilter.orders.email": string;
  "rowFilter.orders.phone": string;
  "rowFilter.orders.address": string;
  "rowFilter.orders.notes": string;
  "rowFilter.orders.email_sent": string;
  "rowFilter.orders.item_count": string;
  "rowFilter.orders.history": string;
  "rowFilter.orders.createdAt": string;
  "rowFilter.orders.updatedAt": string;
  "rowFilter.orders.MemberId": string;
  /** products */
  "body.products": definitions["products"];
  "rowFilter.products.id": string;
  "rowFilter.products.unf": string;
  "rowFilter.products.upc_code": string;
  "rowFilter.products.category": string;
  "rowFilter.products.sub_category": string;
  "rowFilter.products.name": string;
  "rowFilter.products.description": string;
  "rowFilter.products.pk": string;
  "rowFilter.products.size": string;
  "rowFilter.products.unit_type": string;
  "rowFilter.products.ws_price": string;
  "rowFilter.products.u_price": string;
  "rowFilter.products.ws_price_cost": string;
  "rowFilter.products.u_price_cost": string;
  "rowFilter.products.codes": string;
  "rowFilter.products.vendor": string;
  "rowFilter.products.import_tag": string;
  "rowFilter.products.createdAt": string;
  "rowFilter.products.updatedAt": string;
  "rowFilter.products.count_on_hand": string;
  "rowFilter.products.no_backorder": string;
  /** wholesaleorders */
  "body.wholesaleorders": definitions["wholesaleorders"];
  "rowFilter.wholesaleorders.id": string;
  "rowFilter.wholesaleorders.vendor": string;
  "rowFilter.wholesaleorders.notes": string;
  "rowFilter.wholesaleorders.status": string;
  "rowFilter.wholesaleorders.payment_status": string;
  "rowFilter.wholesaleorders.shipment_status": string;
  "rowFilter.wholesaleorders.createdAt": string;
  "rowFilter.wholesaleorders.updatedAt": string;
}

export interface operations {}

export interface external {}
